openapi: 3.1.0

info:
  title: Skill Tracker API
  description: >-
    This API allows to manage and query skills and people. It provides
    endpoints to create, read, update, and delete skills and people. It also
    allows to manage the skills of a person.
  version: v1

servers:
  - url: https://{environment}.skills-tracker.domain.tld
    description: API Server URL
    variables:
      environment:
        enum:
          - dev.api
          - test.api
          - stage.api
          - api
        default: api
        description: The environment of the API (development, test, stage, or production)

tags:
  - name: Skill
    description: Manage and query skills
  - name: People
    description: Manage and query people
  - name: Personal Skills
    description: Manage and query personal skills

security:
  - azure_oauth: []

paths:
  /people:
    get:
      security:
        - azure_oauth: [ 'api://client-id/read' ]
      tags:
        - People
      summary: Get all people
      description: Retrieves a paginated list of all people
      operationId: getAllPeople
      parameters:
        - name: firstName
          in: query
          description: Filter by first name (case-insensitive, partial match)
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          description: Filter by last name (case-insensitive, partial match)
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filter by email (case-insensitive, partial match)
          required: false
          schema:
            type: string
        - name: skillFilters
          in: query
          description: >-
            Filter people by their skills and skill levels. Format: skillName:operator:level
            where operator can be 'lt', 'lte', 'gt', 'gte', or 'eq'. Multiple filters can be applied. (case-insensitive)
          required: false
          schema:
            type: array
            items:
              type: string
          example:
            - "java:gte:practitioner"
            - "docker:gte:working"
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
            default: [ "lastName,asc" ]
      responses:
        '200':
          description: Successfully retrieved the list of people
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedPeople'
        '400':
          description: Invalid page or size parameter
    post:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - People
      summary: Create a new person
      description: Creates a new person
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePerson'
        required: true
      responses:
        '201':
          description: Successfully created the person
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid input
  /people/{personId}:
    get:
      security:
        - azure_oauth: [ 'api://client-id/read' ]
      tags:
        - People
      summary: Get a person by ID
      description: Retrieves a person by its ID
      operationId: getPerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved the person
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person not found
    put:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - People
      summary: Update a person
      description: Updates an existing person
      operationId: updatePerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePerson'
        required: true
      responses:
        '200':
          description: Successfully updated the person
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid input
        '404':
          description: Person not found
    delete:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - People
      summary: Delete a person
      description: Deletes a person by its ID
      operationId: deletePerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Successfully deleted the person
        '404':
          description: Person not found
  /people/{personId}/skills:
    get:
      security:
        - azure_oauth: [ 'api://client-id/read' ]
      tags:
        - Personal Skills
      summary: Get skills for a person
      description: Retrieves all personal skills for a person by their ID
      operationId: getPersonalSkills
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: skillName
          in: query
          description: Filter skills by name (case-insensitive, partial match)
          required: false
          schema:
            type: string
        - name: levelOperator
          in: query
          description: Operator for skill level comparison (lt, lte, gt, gte, eq)
          required: false
          schema:
            type: string
            enum: [ lt, lte, gt, gte, eq ]
        - name: level
          in: query
          description: Skill level to compare against
          required: false
          schema:
            type: string
            enum: [ AWARENESS, WORKING, PRACTITIONER, EXPERT ]
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
            default: [ "skillName,asc" ]
      responses:
        '200':
          description: Successfully retrieved the person's skills
          content:
            application/hal+json:
              schema:
                $ref: >-
                  #/components/schemas/PagedPersonalSkills
        '404':
          description: Person not found
    post:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - Personal Skills
      summary: Add a skill to a person
      description: Adds a new skill to a person
      operationId: addPersonalSkill
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalSkill'
        required: true
      responses:
        '201':
          description: Successfully added the skill
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PersonalSkill'
        '400':
          description: Invalid input
        '404':
          description: Person not found
  /people/{personId}/skills/{personalSkillId}:
    get:
      security:
        - azure_oauth: [ 'api://client-id/read' ]
      tags:
        - Personal Skills
      summary: Get a persons skill by ID
      description: Retrieves a persons skill by its ID
      operationId: getPersonalSkill
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: personalSkillId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved the personal skill
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PersonalSkill'
        '404':
          description: Persons skill not found
    put:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - Personal Skills
      summary: Update a person's skill
      description: Updates an existing skill for a person
      operationId: updatePersonalSkill
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: personalSkillId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePersonalSkill'
        required: true
      responses:
        '200':
          description: Successfully updated the personal skill
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PersonalSkill'
        '400':
          description: Invalid input
        '404':
          description: Person or personal skill not found
    delete:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - Personal Skills
      summary: Delete a person's skill
      description: Deletes a skill from a person
      operationId: deletePersonalSkill
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: personalSkillId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Successfully deleted the personal skill
        '404':
          description: Person or personal skill not found
  /skills:
    get:
      security:
        - azure_oauth: [ 'api://client-id/read' ]
      tags:
        - Skill
      summary: Get all skills
      description: Retrieves a paginated list of all skills
      operationId: getAllSkills
      parameters:
        - name: name
          in: query
          description: Filter skills by name (case-insensitive, partial match)
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
            default: [ "name,asc" ]
      responses:
        '200':
          description: Successfully retrieved the list of skills
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedSkills'
        '400':
          description: Invalid page or size parameter
    post:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - Skill
      summary: Create a new skill
      description: Creates a new skill
      operationId: createSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSkill'
        required: true
      responses:
        '201':
          description: Successfully created the skill
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
        '400':
          description: Invalid input
  /skills/{skillId}:
    get:
      security:
        - azure_oauth: [ 'api://client-id/read' ]
      tags:
        - Skill
      summary: Get a skill by ID
      description: Retrieves a skill by its ID
      operationId: getSkill
      parameters:
        - name: skillId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved the skill
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
        '404':
          description: Skill not found
    put:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - Skill
      summary: Update a skill
      description: Updates an existing skill
      operationId: updateSkill
      parameters:
        - name: skillId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSkill'
        required: true
      responses:
        '200':
          description: Successfully updated the skill
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
        '400':
          description: Invalid input
        '404':
          description: Skill not found
    delete:
      security:
        - azure_oauth: [ 'api://client-id/write' ]
      tags:
        - Skill
      summary: Delete a skill
      description: Deletes a skill by its ID
      operationId: deleteSkill
      parameters:
        - name: skillId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Successfully deleted the skill
        '404':
          description: Skill not found

components:
  schemas:
    Skill:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
        version:
          type: integer
          format: int32
          readOnly: true
        createdDate:
          type: string
          format: date
          readOnly: true
        lastModifiedDate:
          type: string
          format: date
          readOnly: true
        _links:
          $ref: '#/components/schemas/Links'
    PagedSkills:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            skills:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CreateSkill:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          minLength: 0
          maxLength: 50
          pattern: '^[a-zA-Z0-9\s\-''#\+\.\/:()]+$'
    UpdateSkill:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          minLength: 0
          maxLength: 50
          pattern: '^[a-zA-Z0-9\s\-''#\+\.\/:()]+$'
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        version:
          type: integer
          format: int32
          readOnly: true
        createdDate:
          type: string
          format: date
          readOnly: true
        lastModifiedDate:
          type: string
          format: date
          readOnly: true
        _links:
          $ref: '#/components/schemas/Links'
    PagedPeople:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            people:
              type: array
              items:
                $ref: '#/components/schemas/Person'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CreatePerson:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 3
          maxLength: 320
        firstName:
          type: string
          minLength: 1
          maxLength: 35
          pattern: '^[a-zA-Z\s\-'']+$'
        lastName:
          type: string
          minLength: 1
          maxLength: 35
          pattern: '^[a-zA-Z\s\-'']+$'
    UpdatePerson:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 3
          maxLength: 320
        firstName:
          type: string
          minLength: 1
          maxLength: 35
          pattern: '^[a-zA-Z\s\-'']+$'
        lastName:
          type: string
          minLength: 1
          maxLength: 35
          pattern: '^[a-zA-Z\s\-'']+$'
    PersonalSkill:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        personId:
          type: integer
          format: int32
          readOnly: true
        skillId:
          type: integer
          format: int32
          readOnly: true
        skillName:
          type: string
          readOnly: true
        level:
          type: string
          enum:
            - AWARENESS
            - WORKING
            - PRACTITIONER
            - EXPERT
        version:
          type: integer
          format: int32
          readOnly: true
        createdDate:
          type: string
          format: date
          readOnly: true
        lastModifiedDate:
          type: string
          format: date
          readOnly: true
        _links:
          $ref: '#/components/schemas/Links'
    PagedPersonalSkills:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            personalSkills:
              type: array
              items:
                $ref: '#/components/schemas/PersonalSkill'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CreatePersonalSkill:
      required:
        - level
        - skillId
      type: object
      properties:
        skillId:
          type: integer
          format: int32
          minimum: 1
        level:
          type: string
          enum:
            - AWARENESS
            - WORKING
            - PRACTITIONER
            - EXPERT
    UpdatePersonalSkill:
      required:
        - level
      type: object
      properties:
        level:
          type: string
          enum:
            - AWARENESS
            - WORKING
            - PRACTITIONER
            - EXPERT
    AuditMetadata:
      type: object
      properties:
        version:
          type: integer
          format: int32
          readOnly: true
        createdDate:
          type: string
          format: date
          readOnly: true
        lastModifiedDate:
          type: string
          format: date
          readOnly: true
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
  parameters:
    PageParam:
      name: page
      in: query
      description: One-based page index
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    SizeParam:
      name: size
      in: query
      description: The size of the page to be returned
      required: false
      schema:
        type: integer
        minimum: 1
        default: 25
    SortParam:
      name: sort
      in: query
      description: >-
        Sorting criteria in the format: property,(asc|desc). Default sort
        order is ascending. Multiple sort criteria are supported.
      required: false
      schema:
        type: array
        items:
          type: string
        default:
          - id,asc
  securitySchemes:
    azure_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/{tenant}/oauth2/v2.0/authorize
          tokenUrl: https://login.microsoftonline.com/{tenant}/oauth2/v2.0/token
          scopes:
            api://client-id/read: Read access to the API
            api://client-id/write: Write access to the API